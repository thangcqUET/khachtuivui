"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Badge } from "@/components/ui/badge"
import {
  MessageCircle,
  Zap,
  DollarSign,
  Heart,
  Bell,
  Phone,
  CheckCircle,
  Star,
  Users,
  Clock,
  Wifi,
  Building,
  Check,
  X,
} from "lucide-react"
import { useActionState } from "react"
import { submitForm } from "./actions"
import { AuthButtons } from "@/components/auth-buttons"

export default function LandingPage() {
  const [state, action, isPending] = useActionState(submitForm, null)
  const [isFormOpen, setIsFormOpen] = useState(false)
  const [isPricingOpen, setIsPricingOpen] = useState(false)

  // Add effect to close form on successful submission
  useEffect(() => {
    if (state?.success) {
      setIsFormOpen(false)
    }
  }, [state])

  const pricingPlans = [
    {
      name: "G√≥i Kh·ªüi Nghi·ªáp",
      price: "299,000",
      period: "th√°ng",
      description: "Ph√π h·ª£p cho qu√°n nh·ªè, c√† ph√™ v·ªâa h√®",
      popular: false,
      features: ["1 thi·∫øt b·ªã IoT", "T·ªëi ƒëa 5 b√†n", "Th√¥ng ƒëi·ªáp c∆° b·∫£n", "H·ªó tr·ª£ email", "B√°o c√°o h√†ng th√°ng"],
      notIncluded: ["T√πy ch·ªânh th√¥ng ƒëi·ªáp", "H·ªó tr·ª£ 24/7", "T√≠ch h·ª£p POS"],
    },
    {
      name: "G√≥i Ph·ªï Bi·∫øn",
      price: "599,000",
      period: "th√°ng",
      description: "L·ª±a ch·ªçn t·ªët nh·∫•t cho qu√°n c√† ph√™, nh√† h√†ng v·ª´a",
      popular: true,
      features: [
        "2 thi·∫øt b·ªã IoT",
        "T·ªëi ƒëa 15 b√†n",
        "Th√¥ng ƒëi·ªáp t√πy ch·ªânh",
        "H·ªó tr·ª£ ƒëi·ªán tho·∫°i",
        "B√°o c√°o chi ti·∫øt",
        "Ph√¢n t√≠ch kh√°ch h√†ng",
      ],
      notIncluded: ["H·ªó tr·ª£ 24/7", "T√≠ch h·ª£p POS"],
    },
    {
      name: "G√≥i Chuy√™n Nghi·ªáp",
      price: "999,000",
      period: "th√°ng",
      description: "D√†nh cho nh√† h√†ng l·ªõn, chu·ªói c·ª≠a h√†ng",
      popular: false,
      features: [
        "5 thi·∫øt b·ªã IoT",
        "Kh√¥ng gi·ªõi h·∫°n b√†n",
        "Th√¥ng ƒëi·ªáp AI th√¥ng minh",
        "H·ªó tr·ª£ 24/7",
        "Dashboard qu·∫£n l√Ω",
        "T√≠ch h·ª£p POS",
        "Ph√¢n t√≠ch n√¢ng cao",
      ],
      notIncluded: [],
    },
    {
      name: "G√≥i Doanh Nghi·ªáp",
      price: "1,999,000",
      period: "th√°ng",
      description: "Gi·∫£i ph√°p to√†n di·ªán cho chu·ªói nh√† h√†ng l·ªõn",
      popular: false,
      features: [
        "Kh√¥ng gi·ªõi h·∫°n thi·∫øt b·ªã",
        "ƒêa chi nh√°nh",
        "AI c√° nh√¢n h√≥a",
        "Qu·∫£n l√Ω t·∫≠p trung",
        "API t√≠ch h·ª£p",
        "ƒê√†o t·∫°o nh√¢n vi√™n",
        "H·ªó tr·ª£ ∆∞u ti√™n",
        "B√°o c√°o th·ªùi gian th·ª±c",
      ],
      notIncluded: [],
    },
    {
      name: "G√≥i T√πy Ch·ªânh",
      price: "Li√™n h·ªá",
      period: "",
      description: "Gi·∫£i ph√°p ri√™ng bi·ªát theo y√™u c·∫ßu ƒë·∫∑c bi·ªát",
      popular: false,
      features: [
        "Thi·∫øt k·∫ø theo y√™u c·∫ßu",
        "T√≠ch h·ª£p ƒë·∫∑c bi·ªát",
        "H·ªó tr·ª£ k·ªπ thu·∫≠t ri√™ng",
        "SLA cam k·∫øt",
        "ƒê√†o t·∫°o chuy√™n s√¢u",
        "B·∫£o tr√¨ ∆∞u ti√™n",
      ],
      notIncluded: [],
    },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-blue-100 sticky top-0 z-40">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <MessageCircle className="h-8 w-8 text-blue-600" />
              <span className="text-2xl font-bold text-gray-800">Kh√°ch Tui Vui</span>
            </div>
            <div className="flex items-center space-x-4">
              <Dialog open={isPricingOpen} onOpenChange={setIsPricingOpen}>
                <DialogTrigger asChild>
                  <Button variant="outline" className="hidden md:flex">
                    Xem B·∫£ng Gi√°
                  </Button>
                </DialogTrigger>
                <DialogContent className="max-w-6xl max-h-[90vh] overflow-y-auto">
                  <DialogHeader>
                    <DialogTitle className="text-center text-2xl mb-4">B·∫£ng Gi√° Kh√°ch Tui Vui</DialogTitle>
                    <p className="text-center text-gray-600 mb-6">
                      Ch·ªçn g√≥i ph√π h·ª£p v·ªõi quy m√¥ v√† nhu c·∫ßu c·ªßa qu√°n b·∫°n
                    </p>
                  </DialogHeader>
                  <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {pricingPlans.map((plan, index) => (
                      <Card
                        key={index}
                        className={`relative border-2 ${
                          plan.popular ? "border-blue-500 shadow-lg scale-105" : "border-gray-200 hover:border-blue-300"
                        } transition-all duration-300`}
                      >
                        {plan.popular && (
                          <Badge className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-blue-500 text-white px-4 py-1">
                            Ph·ªï bi·∫øn nh·∫•t
                          </Badge>
                        )}
                        <CardHeader className="text-center pb-4">
                          <CardTitle className="text-xl font-bold text-gray-800">{plan.name}</CardTitle>
                          <div className="mt-2">
                            <span className="text-3xl font-bold text-blue-600">{plan.price}</span>
                            {plan.period && <span className="text-gray-500">ƒë/{plan.period}</span>}
                          </div>
                          <p className="text-sm text-gray-600 mt-2">{plan.description}</p>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-3">
                            <div>
                              <h4 className="font-semibold text-green-700 mb-2 flex items-center">
                                <Check className="h-4 w-4 mr-1" />
                                Bao g·ªìm:
                              </h4>
                              <ul className="space-y-1">
                                {plan.features.map((feature, featureIndex) => (
                                  <li key={featureIndex} className="flex items-center text-sm text-gray-600">
                                    <Check className="h-3 w-3 text-green-500 mr-2 flex-shrink-0" />
                                    {feature}
                                  </li>
                                ))}
                              </ul>
                            </div>
                            {plan.notIncluded.length > 0 && (
                              <div>
                                <h4 className="font-semibold text-gray-500 mb-2 flex items-center">
                                  <X className="h-4 w-4 mr-1" />
                                  Kh√¥ng bao g·ªìm:
                                </h4>
                                <ul className="space-y-1">
                                  {plan.notIncluded.map((feature, featureIndex) => (
                                    <li key={featureIndex} className="flex items-center text-sm text-gray-400">
                                      <X className="h-3 w-3 text-gray-400 mr-2 flex-shrink-0" />
                                      {feature}
                                    </li>
                                  ))}
                                </ul>
                              </div>
                            )}
                          </div>
                          <Button
                            className={`w-full mt-6 ${
                              plan.popular
                                ? "bg-blue-600 hover:bg-blue-700 text-white"
                                : "bg-gray-100 hover:bg-gray-200 text-gray-800"
                            }`}
                            onClick={() => {
                              setIsPricingOpen(false)
                              setIsFormOpen(true)
                            }}
                          >
                            {plan.price === "Li√™n h·ªá" ? "Li√™n h·ªá t∆∞ v·∫•n" : "Ch·ªçn g√≥i n√†y"}
                          </Button>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                  <div className="mt-6 text-center text-sm text-gray-500">
                    <p>üí° T·∫•t c·∫£ g√≥i ƒë·ªÅu bao g·ªìm setup mi·ªÖn ph√≠ v√† h·ªó tr·ª£ k·ªπ thu·∫≠t ban ƒë·∫ßu</p>
                    <p>
                      üìû Li√™n h·ªá ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n g√≥i ph√π h·ª£p nh·∫•t: <strong>1900-XXX-XXX</strong>
                    </p>
                  </div>
                </DialogContent>
              </Dialog>
              <AuthButtons />
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-16 md:py-24 px-4">
        <div className="container mx-auto text-center">
          <div className="max-w-4xl mx-auto">
            <h1 className="text-4xl md:text-6xl font-bold text-gray-800 mb-6 leading-tight">
              Truy·ªÅn t·∫£i th√¥ng ƒëi·ªáp t·ªõi kh√°ch h√†ng c·ªßa b·∫°n c√πng <span className="text-blue-600">Kh√°ch Tui Vui</span>
            </h1>
            <p className="text-xl md:text-2xl text-gray-600 mb-8 italic leading-relaxed">
              "L·ªùi n√≥i ch·∫≥ng m·∫•t ti·ªÅn mua ‚Äì<br />
              L·ª±a l·ªùi m√† n√≥i cho v·ª´a l√≤ng nhau"
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
              <Dialog open={isFormOpen} onOpenChange={setIsFormOpen}>
                <DialogTrigger asChild>
                  <Button
                    size="lg"
                    className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 text-lg rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
                  >
                    Th·ª≠ ngay v√† lu√¥n
                    <MessageCircle className="ml-2 h-5 w-5" />
                  </Button>
                </DialogTrigger>
                <DialogContent className="sm:max-w-md">
                  <DialogHeader>
                    <DialogTitle className="text-center text-xl">ƒêƒÉng k√Ω d√πng th·ª≠ Kh√°ch Tui Vui</DialogTitle>
                  </DialogHeader>
                  <form action={action} className="space-y-4">
                    <div>
                      <Label htmlFor="name">H·ªç v√† t√™n *</Label>
                      <Input id="name" name="name" required placeholder="Nguy·ªÖn VƒÉn A" disabled={isPending} />
                    </div>
                    <div>
                      <Label htmlFor="business">T√™n qu√°n/c·ª≠a h√†ng *</Label>
                      <Input
                        id="business"
                        name="business"
                        required
                        placeholder="Qu√°n c√† ph√™ ABC"
                        disabled={isPending}
                      />
                    </div>
                    <div>
                      <Label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i *</Label>
                      <Input id="phone" name="phone" required placeholder="0901234567" disabled={isPending} />
                    </div>
                    <div>
                      <Label htmlFor="email">Email</Label>
                      <Input
                        id="email"
                        name="email"
                        type="email"
                        placeholder="email@example.com"
                        disabled={isPending}
                      />
                    </div>
                    <div>
                      <Label htmlFor="message">Ghi ch√∫</Label>
                      <Textarea
                        id="message"
                        name="message"
                        placeholder="M√¥ t·∫£ th√™m v·ªÅ qu√°n c·ªßa b·∫°n..."
                        rows={3}
                        disabled={isPending}
                      />
                    </div>
                    <Button type="submit" className="w-full bg-blue-600 hover:bg-blue-700" disabled={isPending}>
                      {isPending ? "ƒêang g·ª≠i..." : "ƒêƒÉng k√Ω ngay"}
                    </Button>
                  </form>

                  {/* Add success/error messages */}
                  {state && (
                    <div
                      className={`mt-4 p-3 rounded-md text-center ${
                        state.success
                          ? "bg-green-50 text-green-800 border border-green-200"
                          : "bg-red-50 text-red-800 border border-red-200"
                      }`}
                    >
                      {state.success ? state.message : state.error}
                    </div>
                  )}
                  <p className="text-sm text-gray-500 text-center">B·∫•m ph√°t l√† ch√∫ng t√¥i s·∫Øp l·ªãch cho b·∫°n lu√¥n √°! üöÄ</p>
                </DialogContent>
              </Dialog>

              <Dialog open={isPricingOpen} onOpenChange={setIsPricingOpen}>
                <DialogTrigger asChild>
                  <Button
                    size="lg"
                    variant="outline"
                    className="border-blue-600 text-blue-600 hover:bg-blue-50 px-8 py-4 text-lg rounded-full shadow-lg hover:shadow-xl transition-all duration-300"
                  >
                    Xem B·∫£ng Gi√°
                    <DollarSign className="ml-2 h-5 w-5" />
                  </Button>
                </DialogTrigger>
              </Dialog>
            </div>

            <p className="text-sm text-gray-500 mt-4">‚ú® B·∫•m ph√°t l√† ch√∫ng t√¥i s·∫Øp l·ªãch cho b·∫°n lu√¥n √°</p>
          </div>
        </div>
      </section>

      {/* Trust Signals */}
      <section className="py-8 px-4 bg-white/50">
        <div className="container mx-auto">
          <div className="flex justify-center items-center space-x-8 md:space-x-16">
            <div className="flex items-center space-x-2">
              <Heart className="h-6 w-6 text-red-500" />
              <span className="font-semibold text-gray-700">Th·∫•u hi·ªÉu</span>
            </div>
            <div className="flex items-center space-x-2">
              <Zap className="h-6 w-6 text-yellow-500" />
              <span className="font-semibold text-gray-700">ƒê∆°n gi·∫£n</span>
            </div>
            <div className="flex items-center space-x-2">
              <Star className="h-6 w-6 text-blue-500" />
              <span className="font-semibold text-gray-700">Ch·∫•t l∆∞·ª£ng</span>
            </div>
          </div>
        </div>
      </section>

      {/* Features */}
      <section className="py-16 px-4 bg-gradient-to-r from-blue-50 to-green-50">
        <div className="container mx-auto">
          <h2 className="text-3xl md:text-4xl font-bold text-center text-gray-800 mb-12">T√≠nh nƒÉng n·ªïi b·∫≠t</h2>
          <div className="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
            <Card className="border-0 shadow-lg">
              <CardContent className="p-6">
                <div className="flex items-start space-x-4">
                  <Bell className="h-8 w-8 text-blue-600 mt-1" />
                  <div>
                    <h3 className="text-xl font-semibold mb-2 text-gray-800">Nh·∫Øc nh·ªü th√¥ng minh</h3>
                    <p className="text-gray-600">
                      Nh·∫Øc nh·ªü kh√°ch mua th√™m m·ªôt c√°ch t·∫ø nh·ªã n·∫øu h·ªç ng·ªìi qu√° l√¢u, kh√¥ng l√†m phi·ªÅn m√† v·∫´n tƒÉng doanh
                      thu.
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-lg">
              <CardContent className="p-6">
                <div className="flex items-start space-x-4">
                  <Phone className="h-8 w-8 text-green-600 mt-1" />
                  <div>
                    <h3 className="text-xl font-semibold mb-2 text-gray-800">G·ªçi nh√¢n vi√™n d·ªÖ d√†ng</h3>
                    <p className="text-gray-600">
                      Kh√°ch h√†ng ch·ªß ƒë·ªông g·ªçi nh√¢n vi√™n m·ªôt c√°ch d·ªÖ d√†ng, kh√¥ng c·∫ßn ph·∫£i g·ªçi to hay ra hi·ªáu th·ªß c√¥ng.
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Value Propositions */}
      <section className="py-16 px-4">
        <div className="container mx-auto">
          <h2 className="text-3xl md:text-4xl font-bold text-center text-gray-800 mb-12">
            T·∫°i sao ch·ªçn Kh√°ch Tui Vui?
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            <Card className="border-0 shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardContent className="p-6 text-center">
                <MessageCircle className="h-12 w-12 text-blue-600 mx-auto mb-4" />
                <h3 className="text-xl font-semibold mb-3 text-gray-800">Giao ti·∫øp tinh t·∫ø</h3>
                <p className="text-gray-600">
                  Truy·ªÅn t·∫£i th√¥ng ƒëi·ªáp ƒë·∫øn kh√°ch h√†ng m·ªôt c√°ch t·ª± nhi√™n, l·ªãch s·ª± v√† ƒë·∫ßy tinh t·∫ø, t·∫°o tr·∫£i nghi·ªám tuy·ªát
                  v·ªùi.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardContent className="p-6 text-center">
                <Zap className="h-12 w-12 text-yellow-500 mx-auto mb-4" />
                <h3 className="text-xl font-semibold mb-3 text-gray-800">Tri·ªÉn khai si√™u t·ªëc</h3>
                <p className="text-gray-600">
                  Ch·ªâ 15 ph√∫t setup, thao t√°c ƒë∆°n gi·∫£n nh∆∞ b·∫•m n√∫t. T·ª´ √¥ng b√† ƒë·∫øn gen Z ƒë·ªÅu d√πng ƒë∆∞·ª£c d·ªÖ d√†ng.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardContent className="p-6 text-center">
                <DollarSign className="h-12 w-12 text-green-500 mx-auto mb-4" />
                <h3 className="text-xl font-semibold mb-3 text-gray-800">Gi√° c·∫£ h·ª£p l√Ω</h3>
                <p className="text-gray-600">
                  Chi ph√≠ si√™u ti·∫øt ki·ªám, ph√π h·ª£p t√∫i ti·ªÅn t·ª´ qu√°n v·ªâa h√® ƒë·∫øn chu·ªói nh√† h√†ng l·ªõn.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardContent className="p-6 text-center">
                <Heart className="h-12 w-12 text-red-500 mx-auto mb-4" />
                <h3 className="text-xl font-semibold mb-3 text-gray-800">H·ªó tr·ª£ t·∫≠n t√¢m</h3>
                <p className="text-gray-600">
                  ƒê·ªôi ng≈© nhi·ªát huy·∫øt, s·∫µn s√†ng ƒë·ªìng h√†nh 24/7. C√≥ v·∫•n ƒë·ªÅ g√¨ l√† ch√∫ng t√¥i lo li·ªÅn!
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-16 px-4">
        <div className="container mx-auto max-w-4xl">
          <h2 className="text-3xl md:text-4xl font-bold text-center text-gray-800 mb-12">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
          <div className="space-y-6">
            <Card className="border-0 shadow-md">
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800 flex items-center">
                  <CheckCircle className="h-5 w-5 text-green-500 mr-2" />
                  Kh√°ch Tui Vui ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o?
                </h3>
                <p className="text-gray-600 ml-7">
                  H·ªá th·ªëng s·ª≠ d·ª•ng thi·∫øt b·ªã IoT ƒë·∫∑t t·∫°i qu√°n ƒë·ªÉ g·ª≠i th√¥ng ƒëi·ªáp th√¢n thi·ªán t·ªõi kh√°ch h√†ng m·ªôt c√°ch t·ª±
                  ƒë·ªông v√† th√¥ng minh.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-md">
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800 flex items-center">
                  <Clock className="h-5 w-5 text-blue-500 mr-2" />
                  C·∫ßn bao l√¢u ƒë·ªÉ setup?
                </h3>
                <p className="text-gray-600 ml-7">
                  Ch·ªâ c·∫ßn 15 ph√∫t. ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i s·∫Ω h·ªó tr·ª£ b·∫°n t·ª´ A‚ÄìZ, ƒë·∫£m b·∫£o m·ªçi th·ª© ho·∫°t ƒë·ªông m∆∞·ª£t m√†.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-md">
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800 flex items-center">
                  <Users className="h-5 w-5 text-purple-500 mr-2" />
                  Kh√°ch h√†ng c√≥ c·∫£m th·∫•y phi·ªÅn kh√¥ng?
                </h3>
                <p className="text-gray-600 ml-7">
                  Kh√¥ng h·ªÅ. C√°c th√¥ng ƒëi·ªáp ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ th√¢n thi·ªán, l·ªãch s·ª± v√† t√¥n tr·ªçng tr·∫£i nghi·ªám kh√°ch h√†ng.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-md">
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800 flex items-center">
                  <Wifi className="h-5 w-5 text-orange-500 mr-2" />
                  C√≥ c·∫ßn k·∫øt n·ªëi internet kh√¥ng?
                </h3>
                <p className="text-gray-600 ml-7">
                  C√≥, nh∆∞ng ch·ªâ c·∫ßn m·∫°ng wifi c∆° b·∫£n l√† ƒë·ªß ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh. Kh√¥ng c·∫ßn bƒÉng th√¥ng cao.
                </p>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-md">
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800 flex items-center">
                  <Building className="h-5 w-5 text-red-500 mr-2" />
                  T√¥i c√≥ th·ªÉ d√πng cho nhi·ªÅu b√†n/qu√°n c√πng l√∫c kh√¥ng?
                </h3>
                <p className="text-gray-600 ml-7">
                  C√≥. Ch√∫ng t√¥i h·ªó tr·ª£ thi·∫øt l·∫≠p cho t·ª´ng v·ªã tr√≠ c·ª• th·ªÉ m·ªôt c√°ch linh ho·∫°t, ph√π h·ª£p v·ªõi m·ªçi quy m√¥.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 px-4 bg-gradient-to-r from-blue-600 to-green-600">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl md:text-4xl font-bold text-white mb-6">S·∫µn s√†ng c·∫£i thi·ªán tr·∫£i nghi·ªám kh√°ch h√†ng?</h2>
          <p className="text-xl text-blue-100 mb-8">
            H√£y ƒë·ªÉ Kh√°ch Tui Vui gi√∫p b·∫°n giao ti·∫øp v·ªõi kh√°ch h√†ng m·ªôt c√°ch tinh t·∫ø v√† hi·ªáu qu·∫£
          </p>
          <Dialog open={isFormOpen} onOpenChange={setIsFormOpen}>
            <DialogTrigger asChild>
              <Button
                size="lg"
                variant="secondary"
                className="bg-white text-blue-600 hover:bg-gray-100 px-8 py-4 text-lg rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
              >
                B·∫Øt ƒë·∫ßu ngay h√¥m nay
                <MessageCircle className="ml-2 h-5 w-5" />
              </Button>
            </DialogTrigger>
          </Dialog>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-800 text-white py-8 px-4">
        <div className="container mx-auto text-center">
          <div className="flex items-center justify-center space-x-2 mb-4">
            <MessageCircle className="h-6 w-6 text-blue-400" />
            <span className="text-xl font-bold">Kh√°ch Tui Vui</span>
          </div>
          <p className="text-gray-400 mb-4">Gi·∫£i ph√°p IoT th√¥ng minh cho giao ti·∫øp kh√°ch h√†ng</p>
          <p className="text-sm text-gray-500">¬© 2024 Kh√°ch Tui Vui. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
        </div>
      </footer>
    </div>
  )
}
